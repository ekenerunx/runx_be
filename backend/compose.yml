# version: '3'
# services:
#   app:
#     build: .
#     ports:
#       - '5000:5000'
#     environment:
#       - NODE_ENV=production
#     command: npm run start:prod
#     depends_on:
#       - redis
#   redis:
#     image: redis
#     ports:
#       - '6379:6379'
#     volumes:
#       - redis-data:/data
# volumes:
#   redis-data:

version: '3.8'

services:
  dev:
    container_name: nestjs_api_dev
    image: nestjs-api-dev:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:debug
    ports:
      - 3002:3002
      - 9229:9229
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
  prod:
    container_name: nestjs_api_prod
    image: nestjs-api-prod:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3002:3002
      - 9229:9229
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

networks:
  nesjs-network:
